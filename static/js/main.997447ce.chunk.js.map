{"version":3,"sources":["components/Display.jsx","components/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["Display","props","id","className","this","numbers","React","Component","Calculator","state","result","displayArr","tempArr","numbersArr","operatorsArr","handleClick","bind","handleClear","handleEquals","e","element","document","getElementById","target","slice","foundDecimal","symbolRegex","length","join","search","innerText","console","log","test","number","parseFloat","push","setState","i","resultArr","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.997447ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Display extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div id='display' className='display col-12'>\r\n      {this.props.numbers}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React from 'react';\r\nimport Display from './Display.jsx';\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      result: '0',\r\n      displayArr: [],\r\n      tempArr: [],\r\n      numbersArr: [],\r\n      operatorsArr: []\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n  }\r\n\r\n  handleClick(e){\r\n    let element = document.getElementById(e.target.id);\r\n    let displayArr = this.state.displayArr.slice();\r\n    let tempArr= this.state.tempArr.slice();\r\n    let numbersArr = this.state.numbersArr.slice();\r\n    let operatorsArr = this.state.operatorsArr.slice();\r\n    let foundDecimal = -1;\r\n    let symbolRegex = /[+*-/]/\r\n\r\n    if (tempArr.length > 0){\r\n        let str = tempArr.join();\r\n        foundDecimal = str.search(/\\./);\r\n    }\r\n\r\n    if (foundDecimal > -1 && element.innerText === '.'){\r\n      console.log('error');\r\n    } else {\r\n\r\n          if (displayArr.length === 0 && e.target.id === 'zero'){\r\n            console.log('error');\r\n          }\r\n          else {\r\n              //if input is number\r\n                if (!symbolRegex.test(element.innerText) || element.innerText === '.') {\r\n                  //if prev input is symbol\r\n                    if(symbolRegex.test(displayArr[displayArr.length - 1])){\r\n                      //if prev prev input is symbol and prev is equal to '-'\r\n                        if(symbolRegex.test(displayArr[displayArr.length - 2]) === true && displayArr[displayArr.length - 1] === '-'){\r\n                          //add '-' to tempArr\r\n                            tempArr.push(displayArr[displayArr.length - 1])\r\n                            operatorsArr.push(displayArr[displayArr.length - 2])\r\n                        }\r\n                        // if prev prev value is number\r\n                        if(symbolRegex.test(displayArr[displayArr.length - 2]) === false && displayArr[displayArr.length - 1] !== '.'){\r\n                          //add operator to operatorsArr\r\n                            operatorsArr.push(displayArr[displayArr.length - 1])\r\n                        }\r\n                        //if prev prev input is symbol and prev is not equal to '-'\r\n                          if(symbolRegex.test(displayArr[displayArr.length - 2]) === true && displayArr[displayArr.length - 1] !== '-'){\r\n                            //add operator to operatorsArr\r\n                              operatorsArr.push(displayArr[displayArr.length - 1])\r\n                          }\r\n                    }\r\n                    //add input to display\r\n                    displayArr.push(element.innerText);\r\n                    //add input to tempArr\r\n                    tempArr.push(element.innerText);\r\n                }\r\n                //if input is not number\r\n                else {\r\n                  //extract full number from tempArr\r\n                  let number = tempArr.join('');\r\n                  if(number){\r\n                    number = parseFloat(number);\r\n                    //put number in nubersArr\r\n                    numbersArr.push(number);\r\n                    //free tempArr\r\n                    tempArr.length = 0;\r\n                  }\r\n                  //convert string to float number\r\n\r\n                  //add input to display\r\n                  displayArr.push(element.innerText);\r\n                }\r\n\r\n                this.setState({\r\n                  tempArr: tempArr,\r\n                  displayArr: displayArr,\r\n                  result: displayArr.join(''),\r\n                  numbersArr: numbersArr,\r\n                  operatorsArr: operatorsArr\r\n                });\r\n\r\n      }\r\n  }\r\n}\r\n\r\n\r\n  handleClear(){\r\n    this.setState({\r\n      result: '0',\r\n      numbersArr: [],\r\n      tempArr: [],\r\n      displayArr: [],\r\n      operatorsArr: []\r\n    })\r\n  }\r\n\r\n  handleEquals(){\r\n    let numbersArr = this.state.numbersArr.slice();\r\n    let tempArr = this.state.tempArr.slice();\r\n    let operatorsArr = this.state.operatorsArr.slice();\r\n    let number = tempArr.join('');\r\n    number = parseFloat(number);\r\n    numbersArr.push(number);\r\n\r\n    let result = numbersArr[0];\r\n\r\n    console.log(numbersArr);\r\n    for(let i = 0; i < operatorsArr.length; i++){\r\n\r\n      switch(operatorsArr[i]){\r\n        case '+':\r\n          result = result + numbersArr[i + 1];\r\n          break;\r\n        case '-':\r\n          result = result - numbersArr[i + 1];\r\n          break;\r\n        case '*':\r\n          result = result * numbersArr[i + 1];\r\n          break;\r\n        case '/':\r\n          result = result / numbersArr[i + 1];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    result = parseFloat(result);\r\n    let resultArr = [];\r\n    resultArr.push(result);\r\n\r\n      this.setState({\r\n        result: result,\r\n        numbersArr: [],\r\n        tempArr: resultArr,\r\n        displayArr: resultArr,\r\n        operatorsArr: []\r\n      })\r\n\r\n\r\n    console.log(result);\r\n\r\n}\r\n  render(){\r\n    return (\r\n      <div className=\"col-6 container-fluid calc\">\r\n        <div className='row'>\r\n          <Display numbers={this.state.result}/>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <button id='clear' className='btn col-6 btn-danger' onClick={this.handleClear}>AC</button>\r\n          <button id='divide' className='btn col-3 btn-secondary' onClick={this.handleClick}>/</button>\r\n          <button id='multiply' className='btn col-3 btn-secondary' onClick={this.handleClick}>*</button>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <button id='seven' className='btn col-3 btn-dark' onClick={this.handleClick}>7</button>\r\n          <button id='eight' className='btn col-3 btn-dark' onClick={this.handleClick}>8</button>\r\n          <button id='nine' className='btn col-3 btn-dark' onClick={this.handleClick}>9</button>\r\n          <button id='subtract' className='btn col-3 btn-secondary' onClick={this.handleClick}>-</button>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <button id='four' className='btn col-3 btn-dark' onClick={this.handleClick}>4</button>\r\n          <button id='five' className='btn col-3 btn-dark' onClick={this.handleClick}>5</button>\r\n          <button id='six' className='btn col-3 btn-dark' onClick={this.handleClick}>6</button>\r\n          <button id='add' className='btn col-3 btn-secondary' onClick={this.handleClick}>+</button>\r\n        </div>\r\n\r\n        <div className='row'>\r\n\r\n          <button id='one' className='btn col-3 btn-dark' onClick={this.handleClick}>1</button>\r\n          <button id='two' className='btn col-3 btn-dark' onClick={this.handleClick}>2</button>\r\n          <button id='three' className='btn col-3 btn-dark' onClick={this.handleClick}>3</button>\r\n          <button id='equals' className='btn col-3 btn-success' onClick={this.handleEquals}>=</button>\r\n          <button id='zero' className='btn col-6 btn-dark' onClick={this.handleClick}>0</button>\r\n          <button id='decimal' className='btn col-3 btn-dark' onClick={this.handleClick}>.</button>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport default Calculator;\r\n","import React from 'react';\nimport Calculator from './components/Calculator.jsx';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}